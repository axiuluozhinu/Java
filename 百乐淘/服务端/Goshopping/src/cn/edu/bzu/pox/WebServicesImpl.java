package cn.edu.bzu.pox;

import java.io.IOException;

import cn.edu.bzu.bean.Active;
import cn.edu.bzu.bean.Consumer;
import cn.edu.bzu.bean.Goods;
import cn.edu.bzu.bean.Stores;
import cn.edu.bzu.data.ActiveData;
import cn.edu.bzu.data.AppraisalData;
import cn.edu.bzu.data.BusinessData;
import cn.edu.bzu.data.ConsumerData;
import cn.edu.bzu.data.GoodsData;
import cn.edu.bzu.data.StoresData;


//Generated by MyEclipse

public class WebServicesImpl implements IWebServices {
	

	/*
	 *显示首页五张图片
	 */
	public Goods[] goodsIndex() throws IOException{
	   GoodsData data=new GoodsData();
	   Goods[] goods=data.goodsIndex();
		return goods;
	}
	/*
	 * 搜索商品显示图片
	 */
	public Goods[] goods_rank_show(String name) throws IOException{
		   GoodsData data=new GoodsData();
		   Goods[] goods=data.rankgoods(name);
			return goods;
		}
	/*
	 * 介绍商品详细信息
	 */
	public Goods   goodsIntroduce(int goodsid) throws IOException{
		GoodsData data=new GoodsData();
		   Goods goods=data.goodsIntroduce(goodsid);
		return goods;
	}
	
	/*
	 * 首页滚动活动图片显示接口
	 */
	public String[] activityImage() throws IOException{
		ActiveData activedata=new ActiveData();
		String[] activeimage= activedata.activityScroll();
		return activeimage;
	}
	/*
	 * 活动详细信息介绍
	 */
	public Active activityIntroduction(int id){
		ActiveData activitydata=new ActiveData();
		Active activity=activitydata.activityIntroduction(id);
		return activity;
		
	}
	/*
	 * 活动主题列表显示
	 */
	public Active[] activityTopic(){
		ActiveData activedata=new ActiveData();
		Active[] active=activedata.activityTopic();
		return active;
	}
   
	/*
	 * 消费者登录验证
	 */
	public String loginChecking(String clientAccount,String clientPassword){
		ConsumerData consumerdata=new ConsumerData();
		String reslut=consumerdata.consumerLoad(clientAccount, clientPassword);
		return reslut;
	}
	
	/*
	 * 消费者注册
	 */
	public String register(String clientAccount,String clientPassword,String clientPhonenumber){
		
		ConsumerData consumerdata=new ConsumerData();
		String result=consumerdata.consumerRegister(clientAccount, clientPassword,clientPhonenumber);
		return result;
	}
	
	/*
	 * 预定商品
	 */
	public void scheduled(int goodsid,String account){
		ConsumerData consumerdata=new ConsumerData();
		consumerdata.scheduled(goodsid, account);
	}
	/*
	 * 取消预定商品
	 */
	public void Cancellation(int goodsid,String account){
		ConsumerData consumerdata=new ConsumerData();
		consumerdata.Cancellation(goodsid,account);
	}
	
	/*
	 * 参与活动
	 */
	public void joinActivity(int activityid,String account){
		ActiveData activedata=new ActiveData();
		activedata.joinActivity(activityid, account);
	}
	/*
	 * 取消参与活动
	 */
	public void cancelJoin(int activityid,String account){
		ActiveData activedata=new ActiveData();
		activedata.cancelJoin(activityid, account);
	}

	/*
	 * 返回商家类别
	 */
	public Stores[] storesType(){
		StoresData storesdata=new StoresData();
		Stores[] stores=storesdata.storesType();
		return stores;
	}
	/*
	 * 返回对应类别的商家店名
	 */
	public Stores[] storesName(String type){
		StoresData storesdata=new StoresData();
		Stores[] stores=storesdata.storesName(type);
		return stores;
	}
	/*
	 * 查询对应商家的详细信息
	 */
	public Stores storesIntroduction(int storeid){
		StoresData storesdata=new StoresData();
		Stores stores=storesdata.storesIntrodution(storeid);
		return stores;
	}

	/*
	 * 客户评价内容
	 */
	public String  appraisalContent(String storeid,String account,String content){
		String reslut="1";
		AppraisalData appraisaldata=new AppraisalData();
		appraisaldata.appraisalContent(storeid, account, content);
		return reslut;
	}
	/*
	 * 客户好评or差评 
	 */
	public String appraisal(String account,String storeid,String app){
		String result="1";
		AppraisalData appraisaldata=new AppraisalData();
		appraisaldata.appraisal(account, storeid, app);
		return result;
	}


	
	/*
	 * 退出
	 */
	public void exit(String account){
		ConsumerData consumerdata=new ConsumerData();
		consumerdata.exit(account);
	}

	
	
	/*
	 * 留言
	 */
	public String leaveMessage(String account,String friendid,String word){
		String result="1";
		ConsumerData consumerdata=new ConsumerData();
		consumerdata.leaveMessage(account, friendid, word);
		return result;
	}
	/*
	 * 查看留言
	 */
	public String[] viewMessage(String account){
		ConsumerData consumerdata=new ConsumerData();
		String[] str=consumerdata.viewMessage(account);
		return str;
	}
	/*
	 * 修改个人信息
	 */
	public void modification(String account,String phonenumber,String sex,String name,String age,String address){
		ConsumerData consumerdata=new ConsumerData();
		consumerdata.modification(account,  phonenumber, sex, name, age, address);
	}
	/*
	 * 查看个人和好友信息
	 */
	public Consumer clientIntroduction(String clientAccount){
		ConsumerData consumerdata=new ConsumerData();
		Consumer consumer=consumerdata.clientIntroduction(clientAccount);
		return consumer;
	}
	
	/*
	 * 分享
	 */
	public String shareGoods(String account,int goodsid){
		String result="1";
		ConsumerData consumerdata=new ConsumerData();
		consumerdata.shareGoods(account, goodsid);
		return result;
	}
     
	/*
	 * 查看好友分享
	 */
	public Goods[] viewShareGooods(String account){
		ConsumerData consumerData=new ConsumerData();
		Goods[] goods=consumerData.viewShareGooods(account);
		return goods;
	}
	
	
	/*
	 * 返回商品分类
	 */
	public String[] goodsType(){
		GoodsData goodsData=new GoodsData();
		String[] str=goodsData.goodsType();
		return str;
	}
    
	/*
	 * 客户发起活动
	 */
	public String clientOrganizeActivity(String account,String topic,String address,String starttime,String endtime,String content){
		String result="1";
		ActiveData activeData=new ActiveData();
		activeData.clientOrganizeActivity(account, topic, address, starttime, endtime, content);
		return result;
	}
	
	/*
	 * 查看好友列表
	 */
	public Consumer[] viewFriend(String account){
		ConsumerData consumerData=new ConsumerData();
		Consumer[] consumer=consumerData.viewFriend(account);
		return consumer;
	}
	
	/*
	 * 根据分类返回商品图片
	 */
	public Goods[] goodsImage(String type)throws IOException{
		GoodsData goodsData=new GoodsData();
		Goods[] goods=goodsData.goodsImage(type);
		return goods;
	}
	
	/*
	 * 查看预定列表
	 */
	
	public Goods[] viewScheduled(String account){
		ConsumerData consumerdata=new ConsumerData();
		Goods[] goods=consumerdata.viewScheduled(account);
		return goods;
	}


	/*
	 * 查看参与的活动列表  1商家活动 2客户活动
	 */
	public Active[] viewJoinActivity(int mark,String account){
		ActiveData activedata=new ActiveData();
		Active[] active=activedata.viewJoinActivity(mark, account);
		return active;
	}
	
	/*
	 * 返回所有商店经纬度
	 */
	public Stores[] storesInformation(){
		StoresData storesData=new StoresData();
		Stores[] stores=storesData.storesInformation();
		return stores;
	}
/*
	 * 返回商店商品图片
	 */
	public Goods[] storeGoodsImage(String storesId)throws IOException{
		StoresData storesData=new StoresData();
		Goods[] goods=storesData.storeGoodsImage(storesId);
		return goods;
	}
	
	/*
	 * 商店近期活动
	 */
	public Active[] RecentActivity(String storesid){
		ActiveData activeData=new ActiveData();
		Active[] active=activeData.RecentActivity(storesid);
		return active;
	}
	
	/*
	 * 显示评价内容
	 */
	public String[] viewAppraisal(String storeid){
		AppraisalData appraisalData=new AppraisalData();
		String[] str=appraisalData.viewAppraisal(storeid);
		return str;
	}
	
	/*
	 * 添加好友
	 */
	public Boolean addFriend(String account,String friendAccount){
		ConsumerData consumerData=new ConsumerData();
		Boolean bl=consumerData.addFriend(account, friendAccount);
		return bl;
	}
	/*
	 * 同意/不同意添加为好友
	 */
	public void agreeAdd(String account,String agree){
		ConsumerData consumerData=new ConsumerData();
		consumerData.agreeAdd(account, agree);
	}
/*
	 * 返回待确认好友用户名
	 */
	public String[] confirmFriend(String account){
		ConsumerData consumerData=new ConsumerData();
		String[] str=consumerData.confirmFriend(account);
		return str;
	}
	
	/*
	 * 商品上架
	 */
	public String  Shelves(String account,String goodsName,String type,String model,String brand,String unit,String material,String color,String goodsimagecode){
		String result="1";
		GoodsData goodsData=new GoodsData();
		goodsData.Shelves(account,goodsName, type, model, brand, unit, material, color,goodsimagecode);
		return result;
	}
	/*
	 * 商品下架
	 */
	public String CancelShelves(int goodsid,String account){
		String result="1";
		GoodsData goodsData=new GoodsData();
		goodsData.CancelShelves(goodsid,account);
		return result;
	}
	
	/*
	 * 返回参加活动的好友列表
	 */
	public String[] friendActivity(String account){
		ActiveData activeData=new ActiveData();
		String[] str=activeData.friendActivity(account);
		return str;
	}
	/*
	 * 返回好友参加的活动列表
	 */
	public Active[]  friendJoinActivity(String account){
		ActiveData activeData=new ActiveData();
		Active[] active=activeData.friendJoinActivity(account);
		return active;
	}

	
	/*
	 * 商家退出
	 */
	public void businessExit(String account){
		BusinessData businessData=new BusinessData();
		businessData.businessExit(account);
	}
	/*
	 * 商家注册信息录入
	 */
	public String businessRegister(String account,String password,String phonenumber){
		BusinessData businessData=new BusinessData();
		String str=businessData.businessRegister(account, password, phonenumber);
		return str;
	}
	/*
	 * 商家登陆时身份验证   1准许登陆  0不准许登陆
	 */
	public String businessLoad(String account,String password){		
		BusinessData businessData=new BusinessData();
		String str=businessData.businessLoad(account, password);
		return str;
	}	
	/*
	 *店铺注册
	 */
	public void storeRegister(String account,String storeName,String type,String storeApproval,String province,String city,String town,String address,String longitude,String latitude){
		StoresData storesData=new StoresData();
		storesData.storeRegister(account, storeName, type, storeApproval, province, city, town, address, latitude, latitude);
	}
	/*
	 * 返回商家自己的店铺名称
	 */
	public Stores[] mystoreName(String account){
		StoresData storesData=new StoresData();
		Stores[] stores=storesData.mystoreName(account);
		return stores;
	}
	/*
	 * 商家查看自己发布的活动
	 */
	public Active[] businessViewActivity(String account){
		ActiveData activeData=new ActiveData();
		Active[] active=activeData.businessViewActivity(account);
		return active;
	}
	/*
	 * 客户查看自己发布的活动
	 */
	public Active[] clientViewActivity(String account){
		ActiveData activeData=new ActiveData();
		Active[] active=activeData.clientViewActivity(account);
		return active;
	}
	/*
	 * 商家发布活动
	 */
	public String businessOrganizeActivity(String account,String topic,String address,String starttime,String endtime,String content){
		String result="1";
		ActiveData activeData=new ActiveData();
		activeData.businessOrganizeActivity(account, topic, address, starttime, endtime, content);
		return result;
	}

	/*
	 * 返回商家信誉度分数
	 */
	public int businessCredibility(String goodsid,String account){
		BusinessData businessdata=new BusinessData();
		int result;
		result=businessdata.businessCredibility(goodsid, account);
		return result;
	}
	/*
	 *返回消费者积分
	 */
	public int clientIntegral(String account){
		int result;
		ConsumerData consumerdata=new ConsumerData();
		result=consumerdata.clientIntegral(account);
		return result;
	}
	/*
	 * 客户修改活动
	 */
	public String alterClientActyivity(String account,String activityid,String topic,String address,String starttime,String endtime,String content){
		String result="1";
		ActiveData activeData=new ActiveData();
		activeData.alterClientActyivity(account,activityid, topic, address, starttime, endtime, content);
		return result;
	}
	/*
	 * 客户取消活动
	 */
	public String cancelClientActivity(String account,int activityid){
		String result="1";
		ActiveData activeData=new ActiveData();
		activeData.cancelClientActivity(account,activityid);
		return result;
	}
	/*
	 * 商家修改活动信息
	 */
	public String alterBusinessActyivity(String account,String activityid,String topic,String address,String starttime,String endtime,String content){
		String result="1";
		ActiveData activeData=new ActiveData();
		activeData.alterBusinessActyivity(account, activityid, topic, address, starttime, endtime, content);
		return result;
	}
	/*
	 * 商家取消活动
	 */
	public String cancelBusinessActivity(String account,String activityid){
		String result="1";
		ActiveData activeData=new ActiveData();
		activeData.cancelBusinessActivity(account,activityid);
		return result;
	}
	/*
	 * 显示当地的商品图片
	 */
	public Goods[] LocalAreaGoodsImage(String address)  throws IOException{
		GoodsData goodsData=new GoodsData();
		Goods[] goods=goodsData.LocalAreaGoodsImage(address);
		return goods;
	}
	/*
	 * 查看预订本店商品的客户
	 */
	public String[] viewScheduledClient(String account){
		BusinessData businessData=new BusinessData();
		String[] str=businessData.viewScheduledClient(account);
		return str;
	}
	/*
	 * 返回客户预订的本店商品
	 */
	public Goods[] localClientScheduledGoods(String businessAccount,String clientAccount){
		BusinessData businessData=new BusinessData();
		Goods[] goods=businessData.localClientScheduledGoods(businessAccount, clientAccount);
		return goods;
	}
	/*
	 * 按星级返回当地商家
	 */
	public Stores[] localBusinessCredibility(String star,String city){
		BusinessData businessdata=new BusinessData();
		Stores[] stores=businessdata.localBusinessCredibility(star, city);
		return stores;
		
	}
	/*
	 * 客户活动通知(商家活动)
	 */
	public Active[] businessAciveMessage(String account){
		ActiveData activeData=new ActiveData();
		Active[] active=activeData.businessAciveMessage(account);
		return active;
	}
	/*
	 * 客户活动通知(客户活动)
	 */
	public Active[] clientAciveMessage(String account){
		ActiveData activeData=new ActiveData();
		Active[] active=activeData.businessAciveMessage(account);
		return active;
	}
	
}